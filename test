module testbench;
  reg clk, reset;
  reg [79:0] data_in;
  reg [7:0] compressed_in;
  reg [1:0] command;
  wire [7:0] compressed_out;
  wire [79:0] decompressed_out;
  wire [1:0] response;
  wire [31:0] test_index;
  wire [79:0] test_mem;
  MA h1(clk, reset,data_in,  compressed_in,command, compressed_out, decompressed_out, response,test_index,test_mem);

  initial begin
    $dumpfile("file.vcd");
    $dumpvars(1);

    // Apply input values

    reset = 0;
    data_in = 80'b111;
    compressed_in = 8'b0;
    command = 2'b00;
    

// 	#20 
//     	reset = 1;
//     #4 
//    		reset = 0;
    
	
    // End simulation
    #100 $finish;
  end
  
  
always begin
    // Repeat clock pulses forever
    forever begin
      	command = 0;
      #4 
      	command = 1;

      #4 
      	command = 2;
      	
      #4 
      	command = 3;
      	compressed_in = compressed_in +1;
      	data_in = data_in + 1;
      #4;
    end
end


always begin
    // Repeat clock pulses forever
    forever begin
        #2
        	clk = 1; 
        #2 
        	clk = 0; 
    end
end
endmodule



